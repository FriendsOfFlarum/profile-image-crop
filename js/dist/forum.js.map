{"version":3,"sources":["webpack://@fof/profile-image-crop/webpack/bootstrap","webpack://@fof/profile-image-crop/external \"flarum.core.compat['extend']\"","webpack://@fof/profile-image-crop/external \"flarum.core.compat['components/AvatarEditor']\"","webpack://@fof/profile-image-crop/./node_modules/@babel/runtime/regenerator/index.js","webpack://@fof/profile-image-crop/external \"flarum.core.compat['components/Modal']\"","webpack://@fof/profile-image-crop/external \"flarum.core.compat['components/Button']\"","webpack://@fof/profile-image-crop/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/profile-image-crop/./node_modules/regenerator-runtime/runtime-module.js","webpack://@fof/profile-image-crop/./node_modules/regenerator-runtime/runtime.js","webpack://@fof/profile-image-crop/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://@fof/profile-image-crop/./node_modules/cropperjs/dist/cropper.esm.js","webpack://@fof/profile-image-crop/./src/forum/components/ProfileImageCropModal.js","webpack://@fof/profile-image-crop/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/profile-image-crop/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","g","this","self","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","e","global","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","then","result","done","toString","keys","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","error","return","TypeError","info","pushTryEntry","locs","iteratorMethod","asyncGeneratorStep","gen","_next","_throw","_typeof","_defineProperties","target","props","descriptor","configurable","writable","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","IN_BROWSER","window","WINDOW","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","cropper_esm_isNaN","Number","isNumber","isUndefined","isObject","cropper_esm_hasOwnProperty","isPlainObject","_constructor","isFunction","callback","cropper_esm_assign","assign","_len","arguments","args","_key","REGEXP_DECIMALS","normalizeDecimalNumber","times","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","addClass","elem","classList","add","className","trim","removeClass","remove","replace","toggleClass","added","REGEXP_HYPHENATE","hyphenate","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","set","addEventListener","removeEventListener","removeListener","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","document","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","documentElement","clientLeft","top","pageYOffset","clientTop","cropper_esm_location","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","cropper_esm_isFinite","isFinite","getAdjustedSizes","_ref4","height","width","isValidNumber","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","maxWidth","Infinity","maxHeight","newCanvasLeft","newCanvasTop","minLeft","min","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","canvas","renderImage","limitCropBox","image","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","createElement","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","methods","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","source","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","getContext","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","getSourceCanvas","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","croppable","AnotherCropper","Cropper","instance","Constructor","_classCallCheck","tagName","reloading","sizing","init","protoProps","staticProps","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","ontimeout","onabort","onerror","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","cropper_esm","ProfileImageCropModal","subClass","superClass","title","app","translator","trans","config","isInitialized","reader","FileReader","lazyRedraw","readAsDataURL","file","content","LoadingIndicator","component","size","loadPicker","Button","loading","onclick","upload","children","$el","_callee","blob","dataURI","bstr","u8arr","regenerator_default","_context","toBlob","File","Modal","initializers","override","AvatarEditor","original","show","extend","close","ignored"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/AvatarEditor'];","module.exports = require(\"regenerator-runtime\");\n","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/*!\n * Cropper.js v1.4.3\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-10-24T13:07:15.032Z\n */\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar IN_BROWSER = typeof window !== 'undefined';\nvar WINDOW = IN_BROWSER ? window : {};\nvar NAMESPACE = 'cropper'; // Actions\n\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw'; // Classes\n\nvar CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\nvar CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\nvar CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\nvar CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\nvar CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\nvar CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\nvar CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\nvar DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\nvar DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none'; // Events\n\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_ZOOM = 'zoom'; // Mime types\n\nvar MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\nvar REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0,\n  // 0, 1, 2, 3\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP,\n  // 'crop', 'move' or 'none'\n  // Define the initial aspect ratio of the crop box\n  initialAspectRatio: NaN,\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n  // An object with the previous cropping result data\n  data: null,\n  // A selector for adding extra containers to preview\n  preview: '',\n  // Re-render the cropper when resize the window\n  responsive: true,\n  // Restore the cropped area after resize the window\n  restore: true,\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n  // Show the black modal\n  modal: true,\n  // Show the dashed lines for guiding\n  guides: true,\n  // Show the center indicator for guiding\n  center: true,\n  // Show the white modal to highlight the crop box\n  highlight: true,\n  // Show the grid background\n  background: true,\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n  // Enable to move the image\n  movable: true,\n  // Enable to rotate the image\n  rotatable: true,\n  // Enable to scale the image\n  scalable: true,\n  // Enable to zoom the image\n  zoomable: true,\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n  // Enable to move the crop box\n  cropBoxMovable: true,\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n/**\n * Check if the given value is not a number.\n */\n\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\n\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\n\nfunction isObject(value) {\n  return _typeof(value) === 'object' && value !== null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\n\nfunction forEach(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length)\n    /* array-like */\n    ) {\n        var length = data.length;\n        var i;\n\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\n\nvar assign = Object.assign || function assign(obj) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n};\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\n\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\nvar REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\n\nfunction setStyle(element, styles) {\n  var style = element.style;\n  forEach(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\n\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\n\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = \"\".concat(className, \" \").concat(value);\n  }\n}\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\n\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\n\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n/**\n * Transform the given string from camelCase to kebab-case\n * @param {string} value - The value to transform.\n * @returns {string} The transformed value.\n */\n\nfunction hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\n\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  }\n\n  if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute(\"data-\".concat(hyphenate(name)));\n}\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\n\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute(\"data-\".concat(hyphenate(name)), data);\n  }\n}\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\n\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (e) {\n      element[name] = undefined;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = undefined;\n    }\n  } else {\n    element.removeAttribute(\"data-\".concat(hyphenate(name)));\n  }\n}\nvar REGEXP_SPACES = /\\s\\s*/;\n\nvar onceSupported = function () {\n  var supported = false;\n\n  if (IN_BROWSER) {\n    var once = false;\n\n    var listener = function listener() {};\n\n    var options = Object.defineProperty({}, 'once', {\n      get: function get() {\n        supported = true;\n        return once;\n      },\n\n      /**\n       * This setter can fix a `TypeError` in strict mode\n       * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n       * @param {boolean} value - The value to set\n       */\n      set: function set(value) {\n        once = value;\n      }\n    });\n    WINDOW.addEventListener('test', listener, options);\n    WINDOW.removeEventListener('test', listener, options);\n  }\n\n  return supported;\n}();\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\n\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (!onceSupported) {\n      var listeners = element.listeners;\n\n      if (listeners && listeners[event] && listeners[event][listener]) {\n        handler = listeners[event][listener];\n        delete listeners[event][listener];\n\n        if (Object.keys(listeners[event]).length === 0) {\n          delete listeners[event];\n        }\n\n        if (Object.keys(listeners).length === 0) {\n          delete element.listeners;\n        }\n      }\n    }\n\n    element.removeEventListener(event, handler, options);\n  });\n}\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\nfunction addListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (options.once && !onceSupported) {\n      var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n      _handler = function handler() {\n        delete listeners[event][listener];\n        element.removeEventListener(event, _handler, options);\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        listener.apply(element, args);\n      };\n\n      if (!listeners[event]) {\n        listeners[event] = {};\n      }\n\n      if (listeners[event][listener]) {\n        element.removeEventListener(event, listeners[event][listener], options);\n      }\n\n      listeners[event][listener] = _handler;\n      element.listeners = listeners;\n    }\n\n    element.addEventListener(event, _handler, options);\n  });\n}\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\n\nfunction dispatchEvent(element, type, data) {\n  var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n  if (isFunction(Event) && isFunction(CustomEvent)) {\n    event = new CustomEvent(type, {\n      detail: data,\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n  }\n\n  return element.dispatchEvent(event);\n}\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\n\nfunction getOffset(element) {\n  var box = element.getBoundingClientRect();\n  return {\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n  };\n}\nvar location = WINDOW.location;\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\n\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\n\nfunction addTimestamp(url) {\n  var timestamp = \"timestamp=\".concat(new Date().getTime());\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\n\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push(\"translateX(\".concat(translateX, \"px)\"));\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push(\"translateY(\".concat(translateY, \"px)\"));\n  } // Rotate should come first before scale to match orientation transform\n\n\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push(\"rotate(\".concat(rotate, \"deg)\"));\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push(\"scaleX(\".concat(scaleX, \")\"));\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push(\"scaleY(\".concat(scaleY, \")\"));\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\n\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = assign({}, pointers);\n  var ratios = [];\n  forEach(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n    forEach(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n      ratios.push(ratio);\n    });\n  });\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n  return ratios[0];\n}\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\n\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n  return endOnly ? end : assign({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\n\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n  forEach(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n  pageX /= count;\n  pageY /= count;\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n/**\n * Check if the given value is a finite number.\n */\n\nvar isFinite = Number.isFinite || WINDOW.isFinite;\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\n\nfunction getAdjustedSizes(_ref4) // or 'cover'\n{\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n\n  var isValidNumber = function isValidNumber(value) {\n    return isFinite(value) && value > 0;\n  };\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    var adjustedWidth = height * aspectRatio;\n\n    if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\n\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\n\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n  var destMaxSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var destMinSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n  var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n  var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\nvar fromCharCode = String.fromCharCode;\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i;\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\n\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n  forEach(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n  return arrayBuffer;\n}\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var chunks = [];\n  var chunkSize = 8192;\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  while (uint8.length > 0) {\n    chunks.push(fromCharCode.apply(void 0, _toConsumableArray(uint8.subarray(0, chunkSize))));\n    uint8 = uint8.subarray(chunkSize);\n  }\n\n  return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n}\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\n\nfunction resetAndGetOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation; // Ignores range error when the image does not have correct Exif information\n\n  try {\n    var littleEndian;\n    var app1Start;\n    var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      var length = dataView.byteLength;\n      var offset = 2;\n\n      while (offset + 1 < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      var exifIDCode = app1Start + 4;\n      var tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        var endianness = dataView.getUint16(tiffOffset);\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D\n        /* bigEndian */\n        ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n      }\n    }\n\n    if (ifdStart) {\n      var _length = dataView.getUint16(ifdStart, littleEndian);\n\n      var _offset;\n\n      var i;\n\n      for (i = 0; i < _length; i += 1) {\n        _offset = ifdStart + i * 12 + 2;\n\n        if (dataView.getUint16(_offset, littleEndian) === 0x0112\n        /* Orientation */\n        ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n      }\n    }\n  } catch (e) {\n    orientation = 1;\n  }\n\n  return orientation;\n}\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\n\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n    // Rotate left 180°\n\n    case 3:\n      rotate = -180;\n      break;\n    // Flip vertical\n\n    case 4:\n      scaleY = -1;\n      break;\n    // Flip vertical and rotate right 90°\n\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n    // Rotate right 90°\n\n    case 6:\n      rotate = 90;\n      break;\n    // Flip horizontal and rotate right 90°\n\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n    // Rotate left 90°\n\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n    var containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n    this.containerData = containerData;\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    this.initialImageData = assign({}, imageData);\n    this.initialCanvasData = assign({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getAdjustedSizes.width;\n      minCanvasHeight = _getAdjustedSizes.height;\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode > (cropped ? 0 : 1)) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n    this.limitCanvas(false, true);\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    setStyle(this.canvas, assign({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n    assign(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, assign({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(assign({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true); // Initialize auto crop area\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n    this.initialCropBoxData = assign({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n      var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      } // The minWidth/Height must be less than maxWidth/Height\n\n\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n    this.limitCropBox(false, true);\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, assign({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.viewBoxImage = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview;\n\n    if (typeof preview === 'string') {\n      previews = this.element.ownerDocument.querySelectorAll(preview);\n    } else if (preview.querySelector) {\n      previews = [preview];\n    }\n\n    this.previews = previews;\n    forEach(previews, function (el) {\n      var img = document.createElement('img'); // Save the original size for recover\n\n      setData(el, DATA_PREVIEW, {\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n        html: el.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n      el.innerHTML = '';\n      el.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.viewBoxImage, assign({\n      width: width,\n      height: height\n    }, getTransforms(assign({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n      setStyle(element.getElementsByTagName('img')[0], assign({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(assign({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      var canvasData;\n      var cropBoxData;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(forEach(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(e) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n    var action;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      forEach(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    } // This line is required for preventing page zooming in iOS browsers\n\n\n    e.preventDefault();\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(e) {\n    var action = this.action;\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        // The first parameter should not be undefined (#432)\n        assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n      });\n    } else {\n      assign(pointers[e.pointerId || 0] || {}, getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n  cropEnd: function cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(e) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n      // Resize crop box\n\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += cropBoxData.width - width;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n      // Move canvas\n\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n      // Zoom canvas\n\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n      // Create crop box\n\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        } // Show the crop box if is hidden\n\n\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    } // Override\n\n\n    forEach(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.cropped && !this.disabled) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n\n      removeClass(this.cropBox, CLASS_HIDDEN);\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = assign({}, this.initialImageData);\n      this.canvasData = assign({}, this.initialCanvasData);\n      this.cropBoxData = assign({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      assign(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n   * @returns {Cropper} this\n   */\n  replace: function replace(url) {\n    var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (hasSameSize) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.viewBoxImage.src = url;\n          forEach(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        this.options.data = null;\n        this.uncreate();\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready && this.disabled) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready && !this.disabled) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n  /**\n   * Destroy the cropper and remove the instance from the image\n   * @returns {Cropper} this\n   */\n  destroy: function destroy() {\n    var element = this.element;\n\n    if (!element[NAMESPACE]) {\n      return this;\n    }\n\n    element[NAMESPACE] = undefined;\n\n    if (this.isImg && this.replaced) {\n      element.src = this.originalUrl;\n    }\n\n    this.uncreate();\n    return this;\n  },\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n   * @returns {Cropper} this\n   */\n  move: function move(offsetX) {\n    var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n    var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Cropper} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n    var changed = false;\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        ratio: ratio,\n        oldRatio: width / naturalWidth,\n        originalEvent: _originalEvent\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        }; // Zoom from the triggering point of the event\n\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Cropper} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n    var transformed = false;\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData$$1() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n      var ratio = imageData.width / imageData.naturalWidth;\n      forEach(data, function (n, i) {\n        data[i] = n / ratio;\n      });\n\n      if (rounded) {\n        // In case rounding off leads to extra 1px in right or bottom border\n        // we should round the top-left corner and the dimension (#343).\n        var bottom = Math.round(data.y + data.height);\n        var right = Math.round(data.x + data.width);\n        data.x = Math.round(data.x);\n        data.y = Math.round(data.y);\n        data.width = right - data.x;\n        data.height = bottom - data.y;\n      }\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Cropper} this\n   */\n  setData: function setData$$1(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n    var cropBoxData = {};\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? assign({}, this.containerData) : {};\n  },\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.sized ? assign({}, this.imageData) : {};\n  },\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n    var data = {};\n\n    if (this.ready) {\n      forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Cropper} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Cropper} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n    var widthChanged;\n    var heightChanged;\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _this$getData = this.getData(),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n\n    var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n    if (ratio !== 1) {\n      initialX *= ratio;\n      initialY *= ratio;\n      initialWidth *= ratio;\n      initialHeight *= ratio;\n    }\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    }, 'cover');\n\n    var _getAdjustedSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\n      height: options.height || (ratio !== 1 ? source.height : initialHeight)\n    }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n    var sourceWidth = source.width;\n    var sourceHeight = source.height; // Source canvas parameters\n\n    var srcX = initialX;\n    var srcY = initialY;\n    var srcWidth;\n    var srcHeight; // Destination canvas parameters\n\n    var dstX;\n    var dstY;\n    var dstWidth;\n    var dstHeight;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    } // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n\n\n    context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    return canvas;\n  },\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Cropper} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Cropper} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n    if (this.ready && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n      options.dragMode = mode;\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n    this.cropped = false;\n    this.disabled = false;\n    this.pointers = {};\n    this.ready = false;\n    this.reloading = false;\n    this.replaced = false;\n    this.sized = false;\n    this.sizing = false;\n    this.init();\n  }\n\n  _createClass(Cropper, [{\n    key: \"init\",\n    value: function init() {\n      var element = this.element;\n      var tagName = element.tagName.toLowerCase();\n      var url;\n\n      if (element[NAMESPACE]) {\n        return;\n      }\n\n      element[NAMESPACE] = this;\n\n      if (tagName === 'img') {\n        this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url; // Stop when it's a blank image\n\n        if (!url) {\n          return;\n        } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: \"load\",\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n      var element = this.element,\n          options = this.options;\n\n      if (!options.rotatable && !options.scalable) {\n        options.checkOrientation = false;\n      } // Only IE10+ supports Typed Arrays\n\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      } // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n\n\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          this.clone();\n        }\n\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n      var clone = this.clone.bind(this);\n      this.reloading = true;\n      this.xhr = xhr;\n      xhr.ontimeout = clone;\n      xhr.onabort = clone;\n      xhr.onerror = clone;\n\n      xhr.onprogress = function () {\n        if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n          xhr.abort();\n        }\n      };\n\n      xhr.onload = function () {\n        _this.read(xhr.response);\n      };\n\n      xhr.onloadend = function () {\n        _this.reloading = false;\n        _this.xhr = null;\n      }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('GET', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: \"read\",\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData;\n      var orientation = resetAndGetOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        // Generate a new Data URL with the orientation value set to 1\n        // as some iOS browsers will render image with its orientation\n        this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n      var crossOrigin;\n      var crossOriginUrl;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n      this.image = image;\n      image.onload = this.start.bind(this);\n      image.onerror = this.stop.bind(this);\n      addClass(image, CLASS_HIDE);\n      element.parentNode.insertBefore(image, element.nextSibling);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      var image = this.isImg ? this.element : this.image;\n      image.onload = null;\n      image.onerror = null;\n      this.sizing = true;\n      var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n      var done = function done(naturalWidth, naturalHeight) {\n        assign(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.sizing = false;\n        _this2.sized = true;\n\n        _this2.build();\n      }; // Modern browsers (except Safari)\n\n\n      if (image.naturalWidth && !IS_SAFARI) {\n        done(image.naturalWidth, image.naturalHeight);\n        return;\n      }\n\n      var sizingImage = document.createElement('img');\n      var body = document.body || document.documentElement;\n      this.sizingImage = sizingImage;\n\n      sizingImage.onload = function () {\n        done(sizingImage.width, sizingImage.height);\n\n        if (!IS_SAFARI) {\n          body.removeChild(sizingImage);\n        }\n      };\n\n      sizingImage.src = image.src; // iOS Safari will convert the image automatically\n      // with its orientation once append it into DOM (#279)\n\n      if (!IS_SAFARI) {\n        sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n        body.appendChild(sizingImage);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var image = this.image;\n      image.onload = null;\n      image.onerror = null;\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this.sized || this.ready) {\n        return;\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image; // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n      template.innerHTML = TEMPLATE;\n      var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n      var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n      var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n      var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n      var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n      this.face = face;\n      canvas.appendChild(image); // Hide the original image\n\n      addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n      container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n      options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n      addClass(cropBox, CLASS_HIDDEN);\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n      }\n\n      this.render();\n      this.ready = true;\n      this.setDragMode(options.dragMode);\n\n      if (options.autoCrop) {\n        this.crop();\n      }\n\n      this.setData(options.data);\n\n      if (isFunction(options.ready)) {\n        addListener(element, EVENT_READY, options.ready, {\n          once: true\n        });\n      }\n\n      dispatchEvent(element, EVENT_READY);\n    }\n  }, {\n    key: \"unbuild\",\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      this.ready = false;\n      this.unbind();\n      this.resetPreview();\n      this.cropper.parentNode.removeChild(this.cropper);\n      removeClass(this.element, CLASS_HIDDEN);\n    }\n  }, {\n    key: \"uncreate\",\n    value: function uncreate() {\n      if (this.ready) {\n        this.unbuild();\n        this.ready = false;\n        this.cropped = false;\n      } else if (this.sizing) {\n        this.sizingImage.onload = null;\n        this.sizing = false;\n        this.sized = false;\n      } else if (this.reloading) {\n        this.xhr.onabort = null;\n        this.xhr.abort();\n      } else if (this.image) {\n        this.stop();\n      }\n    }\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: \"noConflict\",\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: \"setDefaults\",\n    value: function setDefaults(options) {\n      assign(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n\n  return Cropper;\n}();\n\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\n\nimport Cropper from 'cropperjs';\n\nexport default class ProfileImageCropModal extends Modal {\n    className() {\n        return 'FofProfileImageCropModal Modal--small';\n    }\n\n    title() {\n        return app.translator.trans('core.forum.user.avatar_upload_button');\n    }\n\n    config(isInitialized) {\n        if (isInitialized) return;\n\n        const reader = new FileReader();\n\n        reader.addEventListener('load', () => {\n            this.image = reader.result;\n            m.lazyRedraw();\n        });\n        reader.readAsDataURL(this.props.file);\n    }\n\n    content() {\n        return (\n            <div className=\"Modal-body\">\n                <div className=\"Image-container\">\n                    {!this.ready && LoadingIndicator.component({ size: 'tiny' })}\n                    {this.image && <img src={this.image} config={this.loadPicker.bind(this)} />}\n                </div>\n\n                <br />\n\n                {Button.component({\n                    className: 'Button Button--primary',\n                    loading: this.loading,\n                    onclick: this.upload.bind(this),\n                    children: app.translator.trans('core.forum.edit_user.submit_button'),\n                })}\n            </div>\n        );\n    }\n\n    loadPicker($el, isInitialized) {\n        if (isInitialized) return;\n\n        setTimeout(() => {\n            this.ready = true;\n\n            this.cropper = new Cropper($el, {\n                aspectRatio: 1,\n                viewMode: 1,\n                guides: false,\n                background: false,\n                responsive: true,\n            });\n\n            m.lazyRedraw();\n        }, 500);\n    }\n\n    async upload() {\n        if (!this.cropper) return;\n\n        this.loading = true;\n\n        const canvas = this.cropper.getCroppedCanvas();\n        let blob;\n\n        if (canvas.toBlob) {\n            await new Promise(r => canvas.toBlob(r)).then(b => (blob = b));\n        } else {\n            const dataURI = canvas && canvas.toDataURL(this.props.file.type);\n\n            const arr = dataURI.split(',');\n            const bstr = atob(arr[1]);\n            let n = bstr.length,\n                u8arr = new Uint8Array(n);\n            while (n--) u8arr[n] = bstr.charCodeAt(n);\n\n            blob = u8arr;\n        }\n\n        const file = new File([blob], this.props.file.name, { type: this.props.file.type });\n\n        this.props.upload(file);\n    }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import { extend, override } from 'flarum/extend';\nimport AvatarEditor from 'flarum/components/AvatarEditor';\n\nimport ProfileImageCropModal from './components/ProfileImageCropModal';\n\napp.initializers.add('fof/profile-image-crop', () => {\n    override(AvatarEditor.prototype, 'upload', function(original, file) {\n        if (!file || !window.FileReader) return original();\n        if (this.loading) return;\n\n        app.modal.show(\n            new ProfileImageCropModal({\n                file,\n                upload: original,\n            })\n        );\n    });\n\n    extend(AvatarEditor.prototype, 'success', () => {\n        if (app.modal && app.modal.component instanceof ProfileImageCropModal) app.modal.close();\n    });\n\n    extend(AvatarEditor.prototype, 'failure', (ignored, error) => {\n        if (app.modal && app.modal.component instanceof ProfileImageCropModal) {\n            app.modal.component.loading = false;\n            app.modal.component.onerror(error);\n        }\n    });\n});\n"],"sourceRoot":""}